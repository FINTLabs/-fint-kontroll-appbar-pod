name: Podlet build and deploy

on:
  push:
    branches:
      - main

#  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy-to-cdn:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Install dependencies
        run: yarn install

      - name: Build React App
        run: yarn build

      - name: Copy asset-manifest.json to podlet
        run: cp build/asset-manifest.json podlet/

      - name: Rename main.*.js file
        run: mv build/static/js/main.*.js build/static/js/main.js

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZ_CLI_CDN }}

      - name: Upload assets to CDN
        uses: azure/CLI@v1
        with:
          azcliversion: 2.42.0
          inlineScript: |
            chmod +x $GITHUB_WORKSPACE/upload-assets.sh
            $GITHUB_WORKSPACE/upload-assets.sh
            

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,enable=true,priority=100,prefix=sha-,suffix=,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v3.1.1
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


  deploy-to-aks:
    name: deploy for ${{ matrix.org }} to ${{ matrix.cluster }}
    runs-on: ubuntu-latest
    needs: build-and-deploy-to-cdn
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - org: fintlabs-no
            cluster: aks-beta-fint-2021-11-23
          - org: ofk-no
            cluster: aks-api-fint-2022-02-08

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get environment
        uses: actions/github-script@v6
        id: environment
        with:
          script: return '${{ matrix.cluster }}'.split('-')[1]
          result-encoding: string

      - name: Get resource group name
        uses: actions/github-script@v6
        id: resource-group
        with:
          script: return 'rg-aks-${{ steps.environment.outputs.result }}'
          result-encoding: string

      - name: Bake manifests with Kustomize
        id: bake
        uses: azure/k8s-bake@v2.4
        with:
          renderEngine: 'kustomize'
          kustomizationPath: 'kustomize/overlays/${{ steps.environment.outputs.result }}/${{ matrix.org }}'

      - uses: azure/login@v1
        with:
          creds: "${{ secrets[format('AKS_{0}_FINT_GITHUB', steps.environment.outputs.result)] }}"

      - uses: azure/use-kubelogin@v1.1
        with:
          kubelogin-version: 'v0.0.26'

      - name: Set the target cluster
        uses: azure/aks-set-context@v3
        with:
          cluster-name: '${{ matrix.cluster }}'
          resource-group: '${{ steps.resource-group.outputs.result }}'
          admin: 'true'
          use-kubelogin: 'true'

      - name: Deploy
        uses: azure/k8s-deploy@v4.9
        with:
          action: deploy
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
          images: ${{ needs.build-and-deploy-to-cdn.outputs.tags }}
          namespace: ${{ matrix.org }}